{
  "openapi": "3.0.0",
  "info": {
    "title": "Timetable",
    "version": "1.0",
    "contact": {
      "name": "Taras Shablii"
    },
    "description": "Timetable App API spec"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1/timetable"
    }
  ],
  "paths": {
    "/students": {
      "get": {
        "summary": "List all students",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "get-students",
        "description": "get all students (optionally paginated)",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "in": "query",
            "name": "page"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create new student",
        "operationId": "post-students",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "create new student",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        }
      }
    },
    "/students/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve student",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-students-studentId",
        "description": "get single student by id",
        "parameters": []
      },
      "put": {
        "summary": "Edit existing student",
        "operationId": "put-students-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "edit student",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete student",
        "operationId": "delete-students-id",
        "responses": {
          "501": {
            "description": "Not Implemented"
          }
        },
        "description": "delete student"
      }
    },
    "/professors": {
      "get": {
        "summary": "List all professors",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Professor"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-professors",
        "description": "get all professors",
        "parameters": []
      },
      "post": {
        "summary": "Create new professor",
        "operationId": "post-professors",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Professor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "create new professor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Professor"
              }
            }
          }
        }
      }
    },
    "/professors/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve professor",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Professor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-professors-id",
        "description": "get single professor by id"
      },
      "put": {
        "summary": "Edit existing professor",
        "operationId": "put-professors-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Professor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "edit professor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Professor"
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete professor",
        "operationId": "delete-professors-id",
        "description": "delete professor",
        "responses": {
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "List all groups",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups",
        "description": "get all groups",
        "parameters": []
      },
      "post": {
        "summary": "Create new group",
        "operationId": "post-groups",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "create new group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve group",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-groups-id",
        "description": "get single group by id"
      },
      "put": {
        "summary": "Edit existing group",
        "operationId": "put-groups-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "edit group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete group",
        "operationId": "delete-groups-id",
        "responses": {
          "501": {
            "description": "Not Implemented"
          }
        },
        "description": "delete group"
      }
    },
    "/auditoriums": {
      "get": {
        "summary": "List all auditoriums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Auditorium"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-auditoriums",
        "description": "get all auditoriums"
      },
      "post": {
        "summary": "Create new auditorium",
        "operationId": "post-auditoriums",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auditorium"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "create new auditorium",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auditorium"
              }
            }
          }
        }
      }
    },
    "/auditoriums/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve auditorium",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auditorium"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-auditoriums-id",
        "description": "get single auditorium by id"
      },
      "put": {
        "summary": "Edit existing auditorium",
        "operationId": "put-auditoriums-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auditorium"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "edit auditorium",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auditorium"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove auditorium",
        "operationId": "delete-auditoriums-id",
        "responses": {
          "501": {
            "description": "Not Implemented"
          }
        },
        "description": "delete auditorium"
      }
    },
    "/semester": {
      "get": {
        "summary": "Lookup semester description",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "lengthInWeeks": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-semester",
        "description": "get semester description"
      }
    },
    "/templates": {
      "get": {
        "summary": "List two-week study cycle",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTemplate"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-schedule-two-week",
        "description": "get study cycle schedule templates"
      },
      "parameters": []
    },
    "/courses": {
      "get": {
        "summary": "List all courses",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-courses",
        "description": "get all courses",
        "parameters": []
      },
      "post": {
        "summary": "Create new course",
        "operationId": "post-courses",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "create new course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve course",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-courses-id",
        "description": "get single course by id"
      },
      "put": {
        "summary": "Edit existing course",
        "operationId": "put-courses-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "edit course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete course",
        "operationId": "delete-courses-id",
        "responses": {
          "501": {
            "description": "Not Implemented"
          }
        },
        "description": "delete course"
      }
    },
    "/templates/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve schedule template",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-templates-id",
        "description": "get single template by id"
      }
    },
    "/schedules/date": {
      "get": {
        "summary": "List schedules for date",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "get-schedules",
        "description": "get schedules for specific date (optionally filter by either professor, group, course or auditorium)",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "professorId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "groupId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "courseId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "auditoriumId"
          }
        ]
      },
      "parameters": []
    },
    "/schedules/week": {
      "get": {
        "summary": "List schedules for semester week",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "get-schedules-week",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "in": "query",
            "name": "week",
            "description": "semester week number",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "professorId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "groupId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "courseId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "auditoriumId"
          }
        ],
        "description": "get schedules for semester week (optionally filter by either professor, group, course or auditorium)"
      }
    },
    "/schedules/month": {
      "get": {
        "summary": "List schedules for month",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "get-schedules-month",
        "description": "get schedules for month (optionally filter by either professor, group, course or auditorium)",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "in": "query",
            "name": "month",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "professorId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "groupId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "courseId"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "in": "query",
            "name": "auditoriumId"
          }
        ]
      }
    },
    "/schedules/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve schedule",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-schedules-id",
        "description": "get specific schedule by id"
      },
      "put": {
        "summary": "Reschedule",
        "operationId": "put-schedules-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "reschedule (optionally reschedule all course occurrances)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schedule"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "recurring"
          }
        ]
      }
    },
    "/schedules/{id}/available/professors": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find available professors",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Professor"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-schedules-id-available-professors",
        "description": "get all available professors for this schedule"
      }
    },
    "/schedules/{id}/available/auditoriums": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find available auditoriums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Auditorium"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-schedules-id-available-auditoriums",
        "description": "get all available auditoriums for this schedule"
      }
    },
    "/schedules/{id}/options": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find rescheduling options",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReschedulingOption"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-schedules-id-options",
        "description": "get this schedule's rescheduling options either for date or semester week",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "in": "query",
            "name": "week",
            "description": "semester week number"
          }
        ]
      }
    },
    "/courses/{id}/professors": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "List all professors teaching the course",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Professor"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-courses-id-professors",
        "description": "get professors teaching this course"
      }
    },
    "/professors/{id}/courses": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "List all professor's courses",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-professors-id-courses",
        "description": "get professor's courses"
      }
    },
    "/professors/{id}/courses/{courseId}/students": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": "courseId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "List all students attending professor's course",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-professors-id-courses-courseId-students",
        "description": "get students attending professor's course"
      }
    }
  },
  "components": {
    "schemas": {
      "Student": {
        "title": "Student",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "exclusiveMinimum": false
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "Professor": {
        "title": "Professor",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "courses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "Group": {
        "title": "Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "Course": {
        "title": "Course",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "Auditorium": {
        "title": "Auditorium",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "ScheduleTemplate": {
        "title": "ScheduleTemplate",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "weekParity": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY"
            ]
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "auditorium": {
            "$ref": "#/components/schemas/Auditorium"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "professor": {
            "$ref": "#/components/schemas/Professor"
          }
        }
      },
      "Period": {
        "title": "Period",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "FIRST",
              "SECOND",
              "THIRD",
              "FOURTH",
              "FIFTH"
            ]
          },
          "time": {
            "type": "string",
            "enum": [
              "08:15-9:45",
              "10:00-11:30",
              "12:30-14:00",
              "14:15-15:45",
              "16:00-17:30"
            ]
          }
        }
      },
      "Schedule": {
        "title": "Schedule",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "template": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScheduleTemplate"
              },
              {
                "type": "integer",
                "format": "int64",
                "minimum": 1,
                "description": "templateId"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY"
            ]
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "auditorium": {
            "$ref": "#/components/schemas/Auditorium"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "professor": {
            "$ref": "#/components/schemas/Professor"
          }
        }
      },
      "ReschedulingOption": {
        "title": "ReschedulingOption",
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY"
            ]
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "auditorium": {
            "$ref": "#/components/schemas/Auditorium"
          }
        }
      }
    },
    "securitySchemes": {}
  }
}